{
    "tests": [
        {
            "module": "collection",
            "function": "f_integer",
            "args": "[42]",
            "depth": "1",
            "errors": true,
            "solutions": [
                "[0]"
            ],
            "arity": 1,
            "skip": false
        },
        {
            "module": "collection",
            "function": "f_range",
            "args": "[42]",
            "depth": "1",
            "errors": true,
            "solutions": [
                "[0]"
            ],
            "arity": 1,
            "skip": false
        },
        {
            "module": "collection",
            "function": "f_atom",
            "args": "[ok]",
            "depth": "1",
            "errors": true,
            "solutions": [
                "['']"
            ],
            "arity": 1,
            "skip": false
        },
        {
            "module": "collection",
            "function": "f_float",
            "args": "[0.0]",
            "depth": "1",
            "errors": true,
            "solutions": [
                "[3.14]"
            ],
            "arity": 1,
            "skip": false
        },
        {
            "module": "collection",
            "function": "f_union",
            "args": "[ok]",
            "depth": "1",
            "errors": true,
            "solutions": [
                "[0]"
            ],
            "arity": 1,
            "skip": false
        },
        {
            "module": "collection",
            "function": "f_tuple",
            "args": "[42]",
            "depth": "1",
            "errors": true,
            "solutions": [
                "[{1,{0,0.0}}]"
            ],
            "arity": 1,
            "skip": false
        },
        {
            "module": "collection",
            "function": "f_list",
            "args": "[[]]",
            "depth": "1",
            "errors": true,
            "solutions": [
                "[[0.0]]"
            ],
            "arity": 1,
            "skip": false
        },
        {
            "module": "collection",
            "function": "f_nested_lists",
            "args": "[[]]",
            "depth": "1",
            "errors": true,
            "solutions": [
                "[[[0],[1],[2,3,4]]]"
            ],
            "arity": 1,
            "skip": false
        },
        {
            "module": "bitstr",
            "function": "f11",
            "args": "[0]",
            "depth": "9",
            "errors": true,
            "arity": 1,
            "solutions": [
                "[42]"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "f12",
            "args": "[0, 0, 0]",
            "depth": "14",
            "errors": true,
            "arity": 3,
            "solutions": [
                "[0, 5, 2]"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "f13",
            "args": "[0, 0, 0]",
            "depth": "24",
            "errors": true,
            "arity": 3,
            "solutions": [
                "[3, 2, 3]", "[6, 3, 2]", "[26, 5, 0]"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "f21",
            "args": "[<<>>]",
            "depth": "6",
            "errors": true,
            "arity": 1,
            "solutions": [
                "[<<0,42:7>>]"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "f22",
            "args": "[<<>>, 42]",
            "depth": "8",
            "errors": true,
            "arity": 2,
            "solutions": [
                "[<<42:6>>, 6]"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "f23",
            "args": "[0, 0]",
            "depth": "7",
            "errors": true,
            "arity": 2,
            "solutions": [
                "[9, 5]"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "f24",
            "args": "[<<>>, 0]",
            "depth": "8",
            "errors": true,
            "arity": 2,
            "solutions": [
                "[<<42:6>>, 6]"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "f25",
            "args": "[<<>>, 0]",
            "depth": "8",
            "errors": true,
            "arity": 2,
            "solutions": [
                "[<<42:6>>, 6]"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "f26",
            "args": "[<<>>, 0]",
            "depth": "10",
            "errors": true,
            "arity": 2,
            "solutions": [
                "[<<\"*\">>, 8]", "[<<42:6>>, 6]"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "f27",
            "args": "[<<>>, 0]",
            "depth": "20",
            "errors": false,
            "arity": 2,
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "f31",
            "args": "[<<>>, 0]",
            "depth": "6",
            "errors": true,
            "arity": 2,
            "solutions": [
                "[<<0:4>>, 0]"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "f32",
            "args": "[<<>>, 0, 3]",
            "depth": "11",
            "errors": true,
            "arity": 3,
            "solutions": [
                "[<<64,3:3>>, 0, 0]"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "f33",
            "args": "[<<>>, 0, 0, <<>>]",
            "depth": "21",
            "errors": true,
            "arity": 4,
            "solutions": [
                "[<<0:1>>, 0, 0, <<0:1>>]"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "f34",
            "args": "[<<>>, 0]",
            "depth": "50",
            "errors": false,
            "arity": 2,
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "f35",
            "args": "[<<>>]",
            "depth": "50",
            "errors": false,
            "arity": 1,
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "f36",
            "args": "[<<>>]",
            "depth": "50",
            "errors": false,
            "arity": 1,
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "f37",
            "args": "[<<>>]",
            "depth": "50",
            "errors": true,
            "arity": 1,
            "solutions": [
                "[<<0,0,0,0,0,0:2>>]"
            ],
            "skip": true
        },
        {
            "module": "otp_int",
            "function": "obsolete",
            "args": "[erlang, length, 1]",
            "depth": "3",
            "errors": true,
            "arity": 3,
            "solutions": [
                "[ssl, negotiated_next_protocol, 1]"
            ],
            "skip": false
        },
        {
            "module": "whitelist",
            "function": "f",
            "args": "[1000]",
            "depth": "3",
            "whitelist": "whitelist-f-1",
            "errors": true,
            "arity": 1,
            "solutions": [
                "[424242]"
            ],
            "skip": false
        },
        {
            "module": "whitelist",
            "function": "g",
            "args": "[1000]",
            "depth": "3",
            "whitelist": "whitelist-g-1",
            "errors": true,
            "arity": 1,
            "solutions": [
                "[4242]"
            ],
            "skip": false
        },
        {
            "module": "whitelist",
            "function": "k",
            "args": "[1000]",
            "depth": "3",
            "whitelist": "whitelist-k-1",
            "errors": true,
            "arity": 1,
            "solutions": [
                "[42]"
            ],
            "skip": false
        },
        {
            "module": "complex_spec",
            "function": "f",
            "args": "[[]]",
            "depth": "32",
            "errors": true,
            "arity": 1,
            "solutions": [
                "[[{[1,2],[{[[1],[2]],[3.14]},2]}]]"
            ],
            "skip": true
        },
        {
            "module": "complex_spec",
            "function": "g",
            "args": "[{[],0}]",
            "depth": "2",
            "errors": true,
            "solutions": [
                "[{[[{[[1,2,4],[3]],[]}]],0}]"
            ],
            "arity": 1,
            "skip": false
        },
        {
            "module": "complex_spec",
            "function": "k",
            "args": "[[]]",
            "depth": "1",
            "errors": true,
            "solutions": [
                "[[{[0],[1]}]]"
            ],
            "arity": 1,
            "skip": false
        },
        {
            "module": "collection",
            "function": "f",
            "args": "[[]]",
            "depth": "10",
            "errors": true,
            "arity": 1,
            "solutions": [
                "[[17,17,42]]"
            ],
            "skip": false
        },
        {
            "module": "collection",
            "function": "g",
            "args": "[1]",
            "depth": "2",
            "errors": true,
            "arity": 1,
            "solutions": [
                "[42]", "[[0,1,2]]", "[\"*\"]"
            ],
            "skip": false
        },
        {
            "module": "collection",
            "function": "g1",
            "args": "[1]",
            "depth": "2",
            "errors": true,
            "arity": 1,
            "solutions": [
                "[42]", "[1]", "[[0,1,2]]"
            ],
            "skip": false
        },
        {
            "module": "collection",
            "function": "h",
            "args": "[1]",
            "depth": "2",
            "errors": true,
            "arity": 1,
            "solutions": [
                "[17]"
            ],
            "bifs": [
                "erlang:get/1"
            ],
            "skip": false
        },
        {
            "module": "collection",
            "function": "f1",
            "args": "[1]",
            "depth": "4",
            "errors": true,
            "arity": 1,
            "withUtestBin": true,
            "solutions": [
                "[38.86]"
            ],
            "skip": false
        },
        {
            "module": "funs",
            "function": "f1",
            "args": "[fun(_) -> 1 end]",
            "depth": "2",
            "errors": true,
            "arity": 1,
            "nondeterministic": true,
            "solutions": [
                "$1((3,)) == 42 and $1((10,)) == 17"
            ],
            "skip": false
        },
        {
            "module": "funs",
            "function": "f2",
            "args": "[fun(_) -> 1 end, 0, 0]",
            "depth": "2",
            "errors": true,
            "arity": 3,
            "nondeterministic": true,
            "solutions": [
                "$1(($2,)) == 42 and $1(($3,)) == 17"
            ],
            "skip": false
        },
        {
            "module": "funs",
            "function": "f3",
            "args": "[fun(_) -> 1 end, 0, 0]",
            "depth": "2",
            "errors": true,
            "arity": 3,
            "nondeterministic": true,
            "solutions": [
                "$1(($1(($2,)),)) == 42 and $1(($1(($3,)),)) == 17"
            ],
            "skip": false
        },
        {
            "module": "funs",
            "function": "f41",
            "args": "[fun(_) -> fun(_) -> 1 end end, 0, 0]",
            "depth": "2",
            "errors": true,
            "arity": 3,
            "nondeterministic": true,
            "solutions": [
                "not isinstance($1(($2,)), LambdaType)",
                "$1(($2,))(($3,)) == 42"
            ],
            "skip": false
        },
        {
            "module": "funs",
            "function": "f42",
            "args": "[fun(_) -> fun(_) -> 1 end end, 0, 0]",
            "depth": "2",
            "errors": true,
            "arity": 3,
            "nondeterministic": true,
            "solutions": [
                "not isinstance($1(($2,)), LambdaType) and isinstance($2, int) and isinstance($3, int)  # [fun(_) -> 0.0 end, 2, 3]",
                "$1(($2,))(($3,))==42 and isinstance($2, int) and isinstance($3, int)  # [fun(_) -> fun(_) -> 42 end end, 2, 3]"
            ],
            "skip": true
        },
        {
            "module": "funs",
            "function": "f5",
            "args": "[fun(_,_,_) -> 1 end, 0, 0, 0]",
            "depth": "2",
            "errors": true,
            "arity": 4,
            "nondeterministic": true,
            "solutions": [
                "$1(($2, $3, $4,)) == 42 and $1(($4, $3, $2,)) == 17"
            ],
            "skip": false
        },
        {
            "module": "funs",
            "function": "f6",
            "args": "[0]",
            "depth": "15",
            "errors": true,
            "arity": 1,
            "solutions": [
                "[42]",
                "[fun(_) -> 42 end]",
                "[fun(_) -> fun(_) -> 42 end end]",
                "[fun(_) -> fun(_) -> fun(_) -> 42 end end end]",
                "[fun(_) -> fun(_) -> fun(_) -> fun(_) -> 42 end end end end]",
                "[fun(_) -> fun(_) -> fun(_) -> fun(_) -> fun(_) -> 42 end end end end end]",
                "[fun(_) -> fun(_) -> fun(_) -> fun(_) -> fun(_) -> fun(_) -> 42 end end end end end end]"
            ],
            "skip": true
        },
        {
            "module": "funs",
            "function": "f7",
            "args": "[fun(_,_) -> 1 end, []]",
            "depth": "6",
            "errors": true,
            "arity": 2,
            "nondeterministic": true,
            "solutions": [
                "reduce($1, $2, 0) == 42 and len($2) == 1",
                "reduce($1, $2, 0) == 42 and len($2) == 2"
            ],
            "skip": true
        },
        {
            "module": "funs",
            "function": "f8",
            "args": "[fun(_) -> true end, [1]]",
            "depth": "4",
            "errors": true,
            "arity": 2,
            "nondeterministic": true,
            "solutions": [
                "len($2) == 0",
                "len($2) > 0 and len([t for t in $2 if $1((t,))]) == 0"
            ],
            "skip": false
        },
        {
            "module": "funs",
            "function": "f91",
            "args": "[fun(_) -> 1 end, 1, 1]",
            "depth": "4",
            "opts": "-p 1 -s 1",
            "errors": true,
            "arity": 3,
            "nondeterministic": true,
            "solutions": [
                "$1.func_code.co_argcount not in [1, 2] and $3 in [1, 2]",
                "$1(($2,)) == 42 and $3 == 1",
                "$1(($2,$2)) == 42 and $3 == 2"
            ],
            "skip": true
        },
        {
            "module": "funs",
            "function": "f92",
            "args": "[fun(_) -> 1 end, 1]",
            "depth": "4",
            "errors": true,
            "arity": 2,
            "nondeterministic": true,
            "solutions": [
                "isinstance($1, LambdaType)",
                "$1(($2,)) == 42",
                "$1(($2,$2)) == 42"
            ],
            "skip": true
        },
        {
            "module": "funs",
            "function": "f10",
            "args": "[fun(_) -> 1 end]",
            "depth": "4",
            "errors": true,
            "arity": 1,
            "solutions": [
                "[fun(_) -> 42 end]"
            ],
            "skip": true
        },
        {
            "module": "funs",
            "function": "f11",
            "args": "[fun(_) -> fun(_) -> 1 end end, fun(_) -> fun(_) -> 1 end end, 1]",
            "depth": "4",
            "errors": true,
            "arity": 3,
            "nondeterministic": true,
            "solutions": [
                "not isinstance($1((0,)), LambdaType)  # [fun(_) -> 6 end, fun(_) -> fun(_) -> 0 end end, 1]",
                "not isinstance($2((0,)), LambdaType)  # [fun(_) -> fun(_) -> 8 end end, fun(_) -> 0.0 end, 1.0]",
                "not isinstance($2((0,))(($3,)), int)  # [fun(_) -> fun(_) -> [] end end, fun(_) -> fun(_) -> 9 end end, 0.0]",
                "not isinstance($1((0,))(($3,)), int)  # [fun(_) -> fun(_) -> 0.0 end end, fun(_) -> fun(_) -> [] end end, 1.0]",
                "$1((0,))(($3,)) + $2((0,))(($3,)) == 9  # [fun(_) -> fun(_) -> 7719 end end, fun(_) -> fun(_) -> -7710 end end, 0.0]"
            ],
            "skip": true
        },
        {
            "module": "funs",
            "function": "f12",
            "args": "[fun(_) -> fun(_) -> 1 end end]",
            "depth": "4",
            "errors": true,
            "arity": 1,
            "nondeterministic": true,
            "solutions": [
                "not isinstance($1((0,)), LambdaType)  # [fun(_) -> 0.0 end]",
                "$1((0,))((1,))==42  # [fun(_) -> fun(_) -> 42 end end]"
            ],
            "skip": true
        },
        {
            "module": "funs",
            "function": "f1ws",
            "args": "[fun(_) -> 1 end]",
            "depth": "10",
            "errors": false,
            "arity": 1,
            "skip": false
        },
        {
            "module": "funs",
            "function": "f2ws",
            "args": "[fun(_) -> 1 end, 1, 1]",
            "depth": "10",
            "errors": false,
            "arity": 3,
            "skip": false
        },
        {
            "module": "funs",
            "function": "f3ws",
            "args": "[fun(_) -> 1 end, 1, 1]",
            "depth": "10",
            "errors": false,
            "arity": 3,
            "skip": true
        },
        {
            "module": "funs",
            "function": "f5ws",
            "args": "[fun(_,_,_) -> 1 end, 0, 0, 0]",
            "depth": "2",
            "errors": false,
            "arity": 4,
            "skip": true
        },
        {
            "module": "funs",
            "function": "f1hs",
            "args": "[fun(_) -> 1 end]",
            "depth": "2",
            "errors": true,
            "arity": 1,
            "solutions": [
                "[fun(3) -> 42; (10) -> 17; (_) -> 42 end]"
            ],
            "skip": true
        },
        {
            "module": "funs",
            "function": "f13a",
            "args": "[fun(_) -> 1 end, {}]",
            "depth": "5",
            "errors": true,
            "arity": 2,
            "solutions": [
                "[fun(_) -> 3 end, {4,2}]"
            ],
            "skip": true
        },
        {
            "module": "funs",
            "function": "f13b",
            "args": "[fun(_) -> 1 end, <<>>]",
            "depth": "25",
            "errors": true,
            "arity": 2,
            "solutions": [
                "[fun(_) -> 1 end, <<5>>]",
                "[fun(_) -> 10 end, <<5:6>>]"
            ],
            "skip": true
        },
        {
            "module": "sum",
            "function": "classify",
            "args": "[[]]",
            "depth": "25",
            "withProper": true,
            "arity": 1,
            "errors": true,
            "solutions": [
                "[[8855,7719,-11863]]", "[[7719,-3008]]", "[[4711]]", "[[4711.0]]"
            ],
            "skip": false
        },
        {
            "module": "funs",
            "function": "f14",
            "args": "[fun(_) -> 1 end, []]",
            "depth": "25",
            "errors": true,
            "arity": 2,
            "solutions": [
                "[fun(_) -> [1, 2, 3] end, [4]]"
            ],
            "skip": true
        },
        {
            "module": "collection",
            "function": "eval_nif",
            "args": "[ok]",
            "depth": "25",
            "errors": false,
            "arity": 1,
            "skip": false
        },
        {
            "module": "bitstr",
            "function": "bit_sz",
            "args": "[<<>>]",
            "depth": "15",
            "errors": true,
            "arity": 1,
            "solutions": [
                "[<<0:4>>]"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "byte_sz",
            "args": "[<<>>]",
            "depth": "42",
            "errors": true,
            "arity": 1,
            "solutions": [
                "[<<0,0:1>>]"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "fbsl",
            "args": "[1, 1]",
            "depth": "25",
            "errors": true,
            "arity": 2,
            "solutions": [
                "[21, 1]", "[42, 0]", "[84, -1]", "[168, -2]"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "bsl_big",
            "args": "[1]",
            "depth": "100",
            "errors": true,
            "arity": 1,
            "solutions": [
                "[7716049313272]",
                "[7716049313271604931327160494]",
                "[77160493132716049313271604931327160493132716049313271604931327160494]"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "fbsr",
            "args": "[1, 1]",
            "depth": "25",
            "errors": true,
            "arity": 2,
            "solutions": [
                "[21, -1]", "[42, 0]", "[84, 1]", "[168, 2]"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "bsr_big",
            "args": "[1]",
            "depth": "100",
            "errors": true,
            "arity": 1,
            "solutions": [
                "[1975308624197536]",
                "[1975308624197530862419753086256]",
                "[19753086241975308624197530862419753086241975308624197530862419753086256]"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "fbnot",
            "args": "[1]",
            "depth": "25",
            "errors": true,
            "arity": 1,
            "solutions": [
                "[-43]"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "bnot_big",
            "args": "[1]",
            "depth": "50",
            "errors": true,
            "arity": 1,
            "solutions": [
                "[-1234567890123456789012345678901234567890123456789012345678901234567892]",
                "[-123456789012345678901234567892]",
                "[-123456789012347]"
            ],
            "skip": true
        },
        {
            "module": "collection",
            "function": "trunc1",
            "args": "[1]",
            "depth": "25",
            "errors": true,
            "arity": 1,
            "solutions": [
                "[2.75]"
            ],
            "skip": false
        },
        {
            "module": "collection",
            "function": "trunc2",
            "args": "[1]",
            "depth": "25",
            "errors": true,
            "arity": 1,
            "solutions": [
                "[-42.75]"
            ],
            "skip": false
        },
        {
            "module": "bitstr",
            "function": "fband",
            "args": "[1, 1]",
            "depth": "25",
            "errors": true,
            "arity": 2,
            "nondeterministic": true,
            "solutions": [
                "$1 & $2 == 42"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "fband_neg",
            "args": "[1, 1]",
            "depth": "25",
            "errors": true,
            "arity": 2,
            "nondeterministic": true,
            "solutions": [
                "$1 & $2 == -42"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "fband2",
            "args": "[1, 1]",
            "depth": "25",
            "errors": true,
            "arity": 2,
            "nondeterministic": true,
            "solutions": [
                "$1 & $2 == 1267650600228229401496703205376"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "fband2_neg",
            "args": "[1, 1]",
            "depth": "25",
            "errors": true,
            "arity": 2,
            "nondeterministic": true,
            "solutions": [
                "$1 & $2 == -1299341865233935136534120785510400"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "fband3",
            "args": "[1, 1]",
            "depth": "25",
            "errors": true,
            "arity": 2,
            "nondeterministic": true,
            "solutions": [
                "($1 + $2) & ($1 - $2) == 1208425819634629144706176"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "fbxor",
            "args": "[1, 1]",
            "depth": "25",
            "errors": true,
            "arity": 2,
            "nondeterministic": true,
            "solutions": [
                "$1 ^ $2 == 42"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "fbxor2",
            "args": "[1, 1]",
            "depth": "25",
            "errors": true,
            "arity": 2,
            "nondeterministic": true,
            "solutions": [
                "$1 ^ $2 == 546546546546546"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "fbxor3",
            "args": "[1, 1]",
            "depth": "25",
            "errors": true,
            "arity": 2,
            "nondeterministic": true,
            "solutions": [
                "$1 ^ $2 == 1321678065467065468706546708964"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "fbxor_neg",
            "args": "[1, 1]",
            "depth": "25",
            "errors": true,
            "arity": 2,
            "nondeterministic": true,
            "solutions": [
                "$1 ^ $2 == -42"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "fbxor2_neg",
            "args": "[1, 1]",
            "depth": "25",
            "errors": true,
            "arity": 2,
            "nondeterministic": true,
            "solutions": [
                "$1 ^ $2 == -546546546546546"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "fbxor3_neg",
            "args": "[1, 1]",
            "depth": "25",
            "errors": true,
            "arity": 2,
            "nondeterministic": true,
            "solutions": [
                "$1 ^ $2 == -1321678065467065468706546708964"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "fbor",
            "args": "[1, 1]",
            "depth": "25",
            "errors": true,
            "arity": 2,
            "nondeterministic": true,
            "solutions": [
                "$1 | $2 == 42"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "fbor2",
            "args": "[1, 1]",
            "depth": "25",
            "errors": true,
            "arity": 2,
            "nondeterministic": true,
            "solutions": [
                "$1 | $2 == 654654621354008904"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "fbor3",
            "args": "[1, 1]",
            "depth": "25",
            "errors": true,
            "arity": 2,
            "nondeterministic": true,
            "solutions": [
                "$1 | $2 == 132167806349873198573065468706546708964"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "fbor_neg",
            "args": "[1, 1]",
            "depth": "25",
            "errors": true,
            "arity": 2,
            "nondeterministic": true,
            "solutions": [
                "$1 | $2 == -3"
            ],
            "skip": true
        },
        {
            "module": "bitstr",
            "function": "fbor2_neg",
            "args": "[1, 1]",
            "depth": "25",
            "errors": true,
            "arity": 2,
            "nondeterministic": true,
            "solutions": [
                "$1 | $2 == -2581098572349081592347598712638"
            ],
            "skip": true
        },
        {
            "module": "collection",
            "function": "l2i",
            "args": "[[49]]",
            "depth": "70",
            "errors": true,
            "arity": 1,
            "solutions": [
                "[\"42\"]"
            ],
            "skip": false
        },
        {
            "module": "collection",
            "function": "l2in",
            "args": "[[49]]",
            "depth": "80",
            "errors": true,
            "arity": 1,
            "whitelist": "collection-l2in-1",
            "solutions": [
                "[\"42\"]"
            ],
            "skip": true
        },
        {
            "module": "collection",
            "function": "to_upper",
            "args": "[[]]",
            "depth": "7",
            "errors": false,
            "arity": 1,
            "skip": true
        }
    ]
}
